@{
	ViewData["Title"] = "Kayıt Ol";
}

@model School.Models.NewUsers  /* Burada model bağlamasını yapıyoruz */

<!DOCTYPE html>
<html lang="tr">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>@ViewData["Title"]</title>
	<style>
		/* Genel stil ayarları */
		body {
			background-color: #f4f6f9;
			Sade arka plan */
			/*color: #333; Metin rengi */
			justify-content: center;
			align-items: center;
			margin: 0; /* Margin sıfırlandı */
			padding: 0; /* Padding sıfırlandı */
		}

		.container {
			max-width: 450px;
			width: 100%;
			padding: 15px;
			margin-top: 25px; /* Eğer navbar yukarı kayıyorsa, bu stil eklenebilir */
		}

		.card {
			border: none;
			border-radius: 8px;
			box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
		}

		.card-body {
			padding: 1.5rem;
		}

		.card-title {
			font-size: 1.6rem; /* Düşük başlık boyutu */
			text-align: center;
			color: #0044cc; /* Kurumsal renk (mavi) */
			margin-bottom: 1.2rem;
		}

		.form-control {
			border-radius: 6px;
			padding: 0.5rem;
			font-size: 0.95rem;
		}

		.form-check-label {
			font-size: 0.9rem;
			color: #666;
		}

		.password-help {
			display: none;
			font-size: 0.85rem;
			color: #dc3545; /* Kırmızı renk, hata mesajları için */
		}

		.form-text {
			margin-top: 0.25rem;
		}

		/* Bağlantı ve ek bilgiler için stil */
		.additional-links {
			margin-top: 1rem;
			font-size: 0.875rem;
			text-align: center;
		}

			.additional-links a {
				color: #0044cc;
				text-decoration: none;
			}

				.additional-links a:hover {
					text-decoration: underline;
				}

		/* Logo stil */
		.logo {
			display: block;
			margin: 0 auto;
			width: 60px; /* Logonun boyutunu ayarlayabilirsiniz */
			height: auto;
		}

		.text-danger {
			font-size: 0.875rem; /* Yazı boyutunu biraz küçültüyoruz */
			color: #dc3545; /* Kırmızı renk (genellikle hata mesajları için kullanılır) */
			margin-top: 5px; /* Hata mesajını biraz daha aşağıya kaydırır */
			margin-bottom: 0; /* Mesajın alt tarafında boşluk bırakmamaya dikkat ediyoruz */
			font-weight: normal; /* Font ağırlığını normal tutuyoruz */
			line-height: 1.5; /* Satır yüksekliği, daha okunabilir olmasını sağlar */
			display: block; /* Hata mesajının her zaman alt satırda görünmesini sağlar */
		}

	</style>
</head>
<body>
	<div class="container">
		<div class="card">
			<div class="card-body">
				<!-- Logo ekleme -->
				<img src="~/images/Logo.png" alt="Kurumsal Logo" class="logo" />

				<h5 class="card-title">Şifre Sıfırlama</h5>
				<form method="post" action="/Account/ForgotPassword" id="forgotpasswordForm">
					@Html.AntiForgeryToken()

					<div class="mb-3">
						<label for="Email" class="form-label">E-posta</label>
						@Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "E-posta adresinizi girin", autocomplete = "email" })
						@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
						<span class="text-success">@ViewBag.SuccessMessage</span>
					</div>

					<button type="submit" class="btn btn-primary w-100">Kayıt Ol</button>
				</form>

				<!-- "Hesabınız var mı?" Linki -->
				<div class="additional-links">
					<p>Hesabınız var mı? <a href="/Account/Login">Giriş Yapın</a></p>
				</div>
			</div>
		</div>
	</div>

	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

	<script>
		/*ASP.NET Core MVC'de ModelState.IsValid ile sunucu tarafında doğruluyoruz burda yapmaya gerek kalmadı
		// Parola uzunluğu kontrolü
		document.getElementById("Password").addEventListener("input", function () {
		   var password = this.value;
		   var passwordHelp = document.getElementById("passwordHelp");

		   if (password.length < 6) {
			   passwordHelp.style.display = "block"; // Mesajı göster
		   } else {
			   passwordHelp.style.display = "none"; // Şifre yeterli uzunlukta ise mesajı izle
		   }

		   if (password.length === 0) {
			   passwordHelp.style.display = "none"; // Şifre alanı boşsa mesajı gizle
		   }
		});

		// Parola onayını kontrol et
		document.getElementById("ConfirmPassword").addEventListener("input", function () {
		   var password = document.getElementById("Password").value;
		   var confirmPassword = this.value;
		   var confirmPasswordHelp = document.getElementById("confirmPasswordHelp");

		   if (confirmPassword !== password) {
			   confirmPasswordHelp.style.display = "block"; // Eşleşmiyorsa mesajı göster
		   } else {
			   confirmPasswordHelp.style.display = "none"; // Eşleşiyorsa mesajı gizle
		   }

		   if (confirmPassword.length === 0) {
			   confirmPasswordHelp.style.display = "none"; // Şifre alanı boşsa mesajı gizle
		   }
		});

		// Form gönderilmeden önce şifre uzunluğunu ve eşleşmesini kontrol et
		document.getElementById("registerForm").addEventListener("submit", function (event) { //formun id'si registerForm
		   var password = document.getElementById("Password").value;
		   var confirmPassword = document.getElementById("ConfirmPassword").value;
		   var minPasswordLength = 6;

		   if (password.length < minPasswordLength) {
			   event.preventDefault(); // Form gönderilmesini engelle
		   }

		   if (password !== confirmPassword) {
			   event.preventDefault(); // Form gönderilmesini engelle
		   }
		});
		*/
	</script>

</body>
</html>
